# Generated by Django 5.0 on 2024-06-06 14:03

import django.core.validators
import django.db.models.deletion
import taggit.managers
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0023_alter_userdefine_category_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AllowedTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='name')),
                ('slug', models.SlugField(allow_unicode=True, max_length=100, unique=True, verbose_name='slug')),
            ],
            options={
                'verbose_name': 'Allowed Tag',
                'verbose_name_plural': 'Allowed Tags',
            },
        ),
        migrations.CreateModel(
            name='NGOdetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Logo', models.ImageField(default='default.jpg', upload_to='profile_pics')),
                ('NGO_name', models.CharField(max_length=100)),
                ('phone_number', models.CharField(blank=True, max_length=10, null=True)),
                ('NGO_email', models.EmailField(max_length=254)),
                ('NGO_website', models.URLField()),
                ('NGO_address', models.CharField(max_length=200)),
                ('NGO_pin_code', models.CharField(max_length=6, validators=[django.core.validators.RegexValidator('^[1-9][0-9]{2}\\s{0,1}[0-9]{3}$', 'Invalid PIN code format')])),
                ('NGO_country', models.CharField(choices=[('IN', 'India')], default='IN', max_length=2)),
                ('NGO_state', models.CharField(choices=[('AN', 'Andaman and Nicobar Islands'), ('AP', 'Andhra Pradesh'), ('AR', 'Arunachal Pradesh'), ('AS', 'Assam'), ('BR', 'Bihar'), ('CH', 'Chandigarh'), ('CG', 'Chhattisgarh'), ('DN', 'Dadra and Nagar Haveli and Daman and Diu'), ('DL', 'Delhi'), ('GA', 'Goa'), ('GJ', 'Gujarat'), ('HR', 'Haryana'), ('HP', 'Himachal Pradesh'), ('JK', 'Jammu and Kashmir'), ('JH', 'Jharkhand'), ('KA', 'Karnataka'), ('KL', 'Kerala'), ('LA', 'Ladakh'), ('LD', 'Lakshadweep'), ('MP', 'Madhya Pradesh'), ('MH', 'Maharashtra'), ('MN', 'Manipur'), ('ML', 'Meghalaya'), ('MZ', 'Mizoram'), ('NL', 'Nagaland'), ('OR', 'Odisha'), ('PY', 'Puducherry'), ('PB', 'Punjab'), ('RJ', 'Rajasthan'), ('SK', 'Sikkim'), ('TN', 'Tamil Nadu'), ('TS', 'Telangana'), ('TR', 'Tripura'), ('UP', 'Uttar Pradesh'), ('UK', 'Uttarakhand'), ('WB', 'West Bengal')], default='TS', max_length=2)),
                ('NGO_founded_year', models.IntegerField(validators=[django.core.validators.MinValueValidator(1900), django.core.validators.MaxValueValidator(2999)])),
                ('NGO_files', models.FileField(blank=True, null=True, upload_to='media/')),
                ('NGO_verified', models.BooleanField(default=False)),
                ('facebook_url', models.URLField(blank=True)),
                ('twitter_url', models.URLField(blank=True)),
                ('instagram_url', models.URLField(blank=True)),
                ('youtube_url', models.URLField(blank=True)),
                ('mission_statement', models.TextField()),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TaggedNGO',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.ngodetail')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_ngos', to='users.allowedtag')),
            ],
            options={
                'verbose_name': 'Tagged NGO',
                'verbose_name_plural': 'Tagged NGOs',
            },
        ),
        migrations.AddField(
            model_name='ngodetail',
            name='NGO_causes',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='users.TaggedNGO', to='users.AllowedTag', verbose_name='Tags'),
        ),
    ]
